import kotlinx.datetime.Instant;
import com.inkapplications.ack.data.CaptureId;
import com.inkapplications.ack.data.PacketSource;
import com.inkapplications.ack.structures.station.Callsign;

CREATE TABLE CapturedPacketEntity (
    id INTEGER AS CaptureId PRIMARY KEY AUTOINCREMENT,
    timestamp INTEGER AS Instant NOT NULL,
    raw_data BLOB NOT NULL,
    packet_origin TEXT AS PacketSource NOT NULL,
    source_callsign TEXT AS Callsign NOT NULL,
    addressee_callsign TEXT AS Callsign,
    data_type TEXT NOT NULL,
    comment_field TEXT
);

findById:
SELECT * FROM CapturedPacketEntity WHERE id = :id;

countAll:
SELECT count(*) FROM CapturedPacketEntity;

findRecent:
SELECT * FROM CapturedPacketEntity ORDER BY timestamp DESC LIMIT :count;

findBySourceCallsign:
SELECT * FROM CapturedPacketEntity WHERE source_callsign = :callsign LIMIT :limit;

countSources:
SELECT count(DISTINCT source_callsign) FROM CapturedPacketEntity;

findMostRecentByType:
SELECT * FROM CapturedPacketEntity WHERE data_type = :type ORDER BY timestamp DESC LIMIT 1;

findStationComments:
SELECT * FROM CapturedPacketEntity WHERE comment_field LIKE '%MHz%' ORDER BY timestamp DESC LIMIT :limit;

findConversation:
SELECT * FROM CapturedPacketEntity
WHERE (source_callsign = :addresseeCallsign AND addressee_callsign = :callsign)
OR (source_callsign = :callsign AND addressee_callsign = :addresseeCallsign);

findLatestConversationMessages:
SELECT * FROM CapturedPacketEntity
WHERE id IN (
    SELECT id FROM (
        SELECT source_callsign AS filterkey, * FROM CapturedPacketEntity
        WHERE addressee_callsign = :callsign
        UNION
        SELECT addressee_callsign AS filterkey, * FROM CapturedPacketEntity
        WHERE (source_callsign = :callsign AND addressee_callsign IS NOT NULL)
        ORDER BY timestamp DESC
    )
    GROUP BY filterkey
);

addPacket:
    INSERT INTO CapturedPacketEntity (
        timestamp,
        raw_data,
        packet_origin,
        source_callsign,
        addressee_callsign,
        data_type,
        comment_field
    ) VALUES (?, ?, ?, ?, ?, ?, ?);

lastId:
    SELECT last_insert_rowid();
